{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/framework-delegate-d1eb6504.js","../node_modules/@ionic/core/dist/esm-es5/ion-nav_2.entry.js"],"names":["attachComponent","delegate","container","component","cssClasses","componentProps","__awaiter","el","__generator","this","_a","label","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","forEach","c","classList","add","Object","assign","appendChild","componentOnReady","sent","detachComponent","element","parentElement","removeViewFromDom","remove","Promise","resolve","ViewController","params","state","prototype","init","_b","_destroy","assert","nav","undefined","matches","view","id","currentParams","keysA","keys","keysB","length","_i","keysA_1","key","convertToView","page","Nav","class_1","hostRef","registerInstance","ionNavWillLoad","createEvent","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","swipeGestureChanged","gesture","enable","swipeGesture","rootChanged","root","setRoot","rootParams","componentWillLoad","document","querySelector","closest","mode","getIonMode","config","getBoolean","emit","componentDidLoad","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","disconnectedCallback","lifecycle","LIFECYCLE_WILL_UNLOAD","destroy","push","opts","done","queueTrns","insertStart","insertViews","insert","insertIndex","insertPages","insertComponents","pop","removeStart","removeCount","popTo","indexOrViewCtrl","tiConfig","removeView","popToRoot","removeIndex","startIndex","setPages","setRouteId","direction","animation","_this","active","getActiveSync","changed","finish","promise","r","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","v","animationBuilder","getRouteId","tagName","getActive","getByIndex","index","canGoBack","canGoBackSync","getPrevious","getPreviousSync","getLength","indexOf","ti","router","canTransition","skipIfBusy","reject","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","failed","rejectReason","shift","runTransition","rejectReason_1","trys","prepareTI","getEnteringView","postViewInit","enteringRequiresTransition","leavingRequiresTransition","transition","viewsLength","viewControllers","map","filter","viewControllers_1","removeEnd","i","destroyQueue","finalBalance","console","warn","insertViews_1","insertViewAt","destroyQueue_1","LIFECYCLE_WILL_LEAVE","LIFECYCLE_DID_LEAVE","destroyQueue_2","destroyView","progressCallback","leavingEl","animationOpts","progressAnimation","ani","sbAni","showGoBack","baseEl","get","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","setPageHidden","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","getTimeGivenProgression","easing","progressEnd","render","h","defineProperty","getElement","enumerable","configurable","style","NavLink","routerDirection","onClick","routerAnimation","navLink","Host"],"mappings":"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","file":"static/js/20.d0334e3a.chunk.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nvar attachComponent = function (delegate, container, component, cssClasses, componentProps) { return __awaiter(void 0, void 0, void 0, function () {\n    var el;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (delegate) {\n                    return [2 /*return*/, delegate.attachViewToDom(container, component, componentProps, cssClasses)];\n                }\n                if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n                    throw new Error('framework delegate is missing');\n                }\n                el = (typeof component === 'string')\n                    ? container.ownerDocument && container.ownerDocument.createElement(component)\n                    : component;\n                if (cssClasses) {\n                    cssClasses.forEach(function (c) { return el.classList.add(c); });\n                }\n                if (componentProps) {\n                    Object.assign(el, componentProps);\n                }\n                container.appendChild(el);\n                if (!el.componentOnReady) return [3 /*break*/, 2];\n                return [4 /*yield*/, el.componentOnReady()];\n            case 1:\n                _a.sent();\n                _a.label = 2;\n            case 2: return [2 /*return*/, el];\n        }\n    });\n}); };\nvar detachComponent = function (delegate, element) {\n    if (element) {\n        if (delegate) {\n            var container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\nexport { attachComponent as a, detachComponent as d };\n","import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-92848855.js';\nimport { b as getIonMode, c as config } from './ionic-global-23e7365a.js';\nimport { b as assert } from './helpers-5c745fbd.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-9b2fc761.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport { a as attachComponent } from './framework-delegate-d1eb6504.js';\nvar VIEW_STATE_NEW = 1;\nvar VIEW_STATE_ATTACHED = 2;\nvar VIEW_STATE_DESTROYED = 3;\nvar ViewController = /** @class */ (function () {\n    function ViewController(component, params) {\n        this.component = component;\n        this.params = params;\n        this.state = VIEW_STATE_NEW;\n    }\n    ViewController.prototype.init = function (container) {\n        return __awaiter(this, void 0, void 0, function () {\n            var component, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.state = VIEW_STATE_ATTACHED;\n                        if (!!this.element) return [3 /*break*/, 2];\n                        component = this.component;\n                        _a = this;\n                        return [4 /*yield*/, attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params)];\n                    case 1:\n                        _a.element = _b.sent();\n                        _b.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * DOM WRITE\n     */\n    ViewController.prototype._destroy = function () {\n        assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n        var element = this.element;\n        if (element) {\n            if (this.delegate) {\n                this.delegate.removeViewFromDom(element.parentElement, element);\n            }\n            else {\n                element.remove();\n            }\n        }\n        this.nav = undefined;\n        this.state = VIEW_STATE_DESTROYED;\n    };\n    return ViewController;\n}());\nvar matches = function (view, id, params) {\n    if (!view) {\n        return false;\n    }\n    if (view.component !== id) {\n        return false;\n    }\n    var currentParams = view.params;\n    if (currentParams === params) {\n        return true;\n    }\n    if (!currentParams && !params) {\n        return true;\n    }\n    if (!currentParams || !params) {\n        return false;\n    }\n    var keysA = Object.keys(currentParams);\n    var keysB = Object.keys(params);\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n    // Test for A's keys different from B.\n    for (var _i = 0, keysA_1 = keysA; _i < keysA_1.length; _i++) {\n        var key = keysA_1[_i];\n        if (currentParams[key] !== params[key]) {\n            return false;\n        }\n    }\n    return true;\n};\nvar convertToView = function (page, params) {\n    if (!page) {\n        return null;\n    }\n    if (page instanceof ViewController) {\n        return page;\n    }\n    return new ViewController(page, params);\n};\nvar convertToViews = function (pages) {\n    return pages.map(function (page) {\n        if (page instanceof ViewController) {\n            return page;\n        }\n        if ('component' in page) {\n            /**\n             * TODO Ionic 6:\n             * Consider switching to just using `undefined` here\n             * as well as on the public interfaces and on\n             * `NavComponentWithProps`. Previously `pages` was\n             * of type `any[]` so TypeScript did not catch this.\n             */\n            return convertToView(page.component, (page.componentProps === null) ? undefined : page.componentProps);\n        }\n        return convertToView(page, undefined);\n    }).filter(function (v) { return v !== null; });\n};\nvar navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\nvar Nav = /** @class */ (function () {\n    function class_1(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n        this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n        this.transInstr = [];\n        this.animationEnabled = true;\n        this.useRouter = false;\n        this.isTransitioning = false;\n        this.destroyed = false;\n        this.views = [];\n        /**\n         * If `true`, the nav should animate the transition of components.\n         */\n        this.animated = true;\n    }\n    class_1.prototype.swipeGestureChanged = function () {\n        if (this.gesture) {\n            this.gesture.enable(this.swipeGesture === true);\n        }\n    };\n    class_1.prototype.rootChanged = function () {\n        if (this.root !== undefined) {\n            if (!this.useRouter) {\n                this.setRoot(this.root, this.rootParams);\n            }\n        }\n    };\n    class_1.prototype.componentWillLoad = function () {\n        this.useRouter =\n            !!document.querySelector('ion-router') &&\n                !this.el.closest('[no-router]');\n        if (this.swipeGesture === undefined) {\n            var mode = getIonMode(this);\n            this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n        }\n        this.ionNavWillLoad.emit();\n    };\n    class_1.prototype.componentDidLoad = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.rootChanged();\n                        _a = this;\n                        return [4 /*yield*/, import('./swipe-back-0a6a44c8.js')];\n                    case 1:\n                        _a.gesture = (_b.sent()).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n                        this.swipeGestureChanged();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.disconnectedCallback = function () {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var view = _a[_i];\n            lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            view._destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        // release swipe back gesture and transition\n        this.transInstr.length = this.views.length = 0;\n        this.destroyed = true;\n    };\n    /**\n     * Push a new component onto the current navigation stack. Pass any additional\n     * information along as an object. This additional information is accessible\n     * through NavParams.\n     *\n     * @param component The component to push onto the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.push = function (component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: -1,\n            insertViews: [{ component: component, componentProps: componentProps }],\n            opts: opts\n        }, done);\n    };\n    /**\n     * Inserts a component into the navigation stack at the specified index.\n     * This is useful to add a component at any point in the navigation stack.\n     *\n     * @param insertIndex The index to insert the component at in the stack.\n     * @param component The component to insert into the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.insert = function (insertIndex, component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: [{ component: component, componentProps: componentProps }],\n            opts: opts\n        }, done);\n    };\n    /**\n     * Inserts an array of components into the navigation stack at the specified index.\n     * The last component in the array will become instantiated as a view, and animate\n     * in to become the active view.\n     *\n     * @param insertIndex The index to insert the components at in the stack.\n     * @param insertComponents The components to insert into the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.insertPages = function (insertIndex, insertComponents, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: insertComponents,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Pop a component off of the navigation stack. Navigates back from the current\n     * component.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.pop = function (opts, done) {\n        return this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Pop to a specific index in the navigation stack.\n     *\n     * @param indexOrViewCtrl The index or view controller to pop to.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.popTo = function (indexOrViewCtrl, opts, done) {\n        var tiConfig = {\n            removeStart: -1,\n            removeCount: -1,\n            opts: opts\n        };\n        if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n            tiConfig.removeView = indexOrViewCtrl;\n            tiConfig.removeStart = 1;\n        }\n        else if (typeof indexOrViewCtrl === 'number') {\n            tiConfig.removeStart = indexOrViewCtrl + 1;\n        }\n        return this.queueTrns(tiConfig, done);\n    };\n    /**\n     * Navigate back to the root of the stack, no matter how far back that is.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.popToRoot = function (opts, done) {\n        return this.queueTrns({\n            removeStart: 1,\n            removeCount: -1,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Removes a component from the navigation stack at the specified index.\n     *\n     * @param startIndex The number to begin removal at.\n     * @param removeCount The number of components to remove.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.removeIndex = function (startIndex, removeCount, opts, done) {\n        if (removeCount === void 0) { removeCount = 1; }\n        return this.queueTrns({\n            removeStart: startIndex,\n            removeCount: removeCount,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Set the root for the current navigation stack to a component.\n     *\n     * @param component The component to set as the root of the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.setRoot = function (component, componentProps, opts, done) {\n        return this.setPages([{ component: component, componentProps: componentProps }], opts, done);\n    };\n    /**\n     * Set the views of the current navigation stack and navigate to the last view.\n     * By default animations are disabled, but they can be enabled by passing options\n     * to the navigation controller. Navigation parameters can also be passed to the\n     * individual pages in the array.\n     *\n     * @param views The list of views to set as the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.setPages = function (views, opts, done) {\n        if (opts == null) {\n            opts = {};\n        }\n        // if animation wasn't set to true then default it to NOT animate\n        if (opts.animated !== true) {\n            opts.animated = false;\n        }\n        return this.queueTrns({\n            insertStart: 0,\n            insertViews: views,\n            removeStart: 0,\n            removeCount: -1,\n            opts: opts\n        }, done);\n    };\n    /** @internal */\n    class_1.prototype.setRouteId = function (id, params, direction, animation) {\n        var _this = this;\n        var active = this.getActiveSync();\n        if (matches(active, id, params)) {\n            return Promise.resolve({\n                changed: false,\n                element: active.element\n            });\n        }\n        var resolve;\n        var promise = new Promise(function (r) { return (resolve = r); });\n        var finish;\n        var commonOpts = {\n            updateURL: false,\n            viewIsReady: function (enteringEl) {\n                var mark;\n                var p = new Promise(function (r) { return (mark = r); });\n                resolve({\n                    changed: true,\n                    element: enteringEl,\n                    markVisible: function () { return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    mark();\n                                    return [4 /*yield*/, finish];\n                                case 1:\n                                    _a.sent();\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); }\n                });\n                return p;\n            }\n        };\n        if (direction === 'root') {\n            finish = this.setRoot(id, params, commonOpts);\n        }\n        else {\n            var viewController = this.views.find(function (v) { return matches(v, id, params); });\n            if (viewController) {\n                finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n            }\n            else if (direction === 'forward') {\n                finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n            }\n            else if (direction === 'back') {\n                finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n            }\n        }\n        return promise;\n    };\n    /** @internal */\n    class_1.prototype.getRouteId = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var active;\n            return __generator(this, function (_a) {\n                active = this.getActiveSync();\n                return [2 /*return*/, active\n                        ? {\n                            id: active.element.tagName,\n                            params: active.params,\n                            element: active.element\n                        }\n                        : undefined];\n            });\n        });\n    };\n    /**\n     * Get the active view.\n     */\n    class_1.prototype.getActive = function () {\n        return Promise.resolve(this.getActiveSync());\n    };\n    /**\n     * Get the view at the specified index.\n     *\n     * @param index The index of the view.\n     */\n    class_1.prototype.getByIndex = function (index) {\n        return Promise.resolve(this.views[index]);\n    };\n    /**\n     * Returns `true` if the current view can go back.\n     *\n     * @param view The view to check.\n     */\n    class_1.prototype.canGoBack = function (view) {\n        return Promise.resolve(this.canGoBackSync(view));\n    };\n    /**\n     * Get the previous view.\n     *\n     * @param view The view to get.\n     */\n    class_1.prototype.getPrevious = function (view) {\n        return Promise.resolve(this.getPreviousSync(view));\n    };\n    class_1.prototype.getLength = function () {\n        return this.views.length;\n    };\n    class_1.prototype.getActiveSync = function () {\n        return this.views[this.views.length - 1];\n    };\n    class_1.prototype.canGoBackSync = function (view) {\n        if (view === void 0) { view = this.getActiveSync(); }\n        return !!(view && this.getPreviousSync(view));\n    };\n    class_1.prototype.getPreviousSync = function (view) {\n        if (view === void 0) { view = this.getActiveSync(); }\n        if (!view) {\n            return undefined;\n        }\n        var views = this.views;\n        var index = views.indexOf(view);\n        return index > 0 ? views[index - 1] : undefined;\n    };\n    // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n    // 1. _nextTrns(): consumes the next transition in the queue\n    // 2. _viewInit(): initializes enteringView if required\n    // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n    // 4. _postViewInit(): add/remove the views from the navigation stack\n    // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n    // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n    // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n    // 8. _transitionFinish(): called once the transition finishes\n    // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n    class_1.prototype.queueTrns = function (ti, done) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promise, router, canTransition;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n                            return [2 /*return*/, Promise.resolve(false)];\n                        }\n                        promise = new Promise(function (resolve, reject) {\n                            ti.resolve = resolve;\n                            ti.reject = reject;\n                        });\n                        ti.done = done;\n                        if (!(ti.opts && ti.opts.updateURL !== false && this.useRouter)) return [3 /*break*/, 2];\n                        router = document.querySelector('ion-router');\n                        if (!router) return [3 /*break*/, 2];\n                        return [4 /*yield*/, router.canTransition()];\n                    case 1:\n                        canTransition = _a.sent();\n                        if (canTransition === false) {\n                            return [2 /*return*/, Promise.resolve(false)];\n                        }\n                        else if (typeof canTransition === 'string') {\n                            router.push(canTransition, ti.opts.direction || 'back');\n                            return [2 /*return*/, Promise.resolve(false)];\n                        }\n                        _a.label = 2;\n                    case 2:\n                        // Normalize empty\n                        if (ti.insertViews && ti.insertViews.length === 0) {\n                            ti.insertViews = undefined;\n                        }\n                        // Enqueue transition instruction\n                        this.transInstr.push(ti);\n                        // if there isn't a transition already happening\n                        // then this will kick off this transition\n                        this.nextTrns();\n                        return [2 /*return*/, promise];\n                }\n            });\n        });\n    };\n    class_1.prototype.success = function (result, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        if (ti.done) {\n            ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n        }\n        ti.resolve(result.hasCompleted);\n        if (ti.opts.updateURL !== false && this.useRouter) {\n            var router = document.querySelector('ion-router');\n            if (router) {\n                var direction = result.direction === 'back' ? 'back' : 'forward';\n                router.navChanged(direction);\n            }\n        }\n    };\n    class_1.prototype.failed = function (rejectReason, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        this.transInstr.length = 0;\n        this.fireError(rejectReason, ti);\n    };\n    class_1.prototype.fireError = function (rejectReason, ti) {\n        if (ti.done) {\n            ti.done(false, false, rejectReason);\n        }\n        if (ti.reject && !this.destroyed) {\n            ti.reject(rejectReason);\n        }\n        else {\n            ti.resolve(false);\n        }\n    };\n    class_1.prototype.nextTrns = function () {\n        // this is the framework's bread 'n butta function\n        // only one transition is allowed at any given time\n        if (this.isTransitioning) {\n            return false;\n        }\n        // there is no transition happening right now\n        // get the next instruction\n        var ti = this.transInstr.shift();\n        if (!ti) {\n            return false;\n        }\n        this.runTransition(ti);\n        return true;\n    };\n    class_1.prototype.runTransition = function (ti) {\n        return __awaiter(this, void 0, void 0, function () {\n            var leavingView, enteringView, requiresTransition, isBackDirection, result, _a, rejectReason_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 6, , 7]);\n                        // set that this nav is actively transitioning\n                        this.ionNavWillChange.emit();\n                        this.isTransitioning = true;\n                        this.prepareTI(ti);\n                        leavingView = this.getActiveSync();\n                        enteringView = this.getEnteringView(ti, leavingView);\n                        if (!leavingView && !enteringView) {\n                            throw new Error('no views in the stack to be removed');\n                        }\n                        if (!(enteringView && enteringView.state === VIEW_STATE_NEW)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, enteringView.init(this.el)];\n                    case 1:\n                        _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        this.postViewInit(enteringView, leavingView, ti);\n                        requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n                            enteringView !== leavingView;\n                        if (requiresTransition && ti.opts && leavingView) {\n                            isBackDirection = ti.opts.direction === 'back';\n                            /**\n                             * If heading back, use the entering page's animation\n                             * unless otherwise specified by the developer.\n                             */\n                            if (isBackDirection) {\n                                ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView && enteringView.animationBuilder);\n                            }\n                            leavingView.animationBuilder = ti.opts.animationBuilder;\n                        }\n                        if (!requiresTransition) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.transition(enteringView, leavingView, ti)];\n                    case 3:\n                        _a = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        _a = {\n                            // transition is not required, so we are already done!\n                            // they're inserting/removing the views somewhere in the middle or\n                            // beginning, so visually nothing needs to animate/transition\n                            // resolve immediately because there's no animation that's happening\n                            hasCompleted: true,\n                            requiresTransition: false\n                        };\n                        _b.label = 5;\n                    case 5:\n                        result = _a;\n                        this.success(result, ti);\n                        this.ionNavDidChange.emit();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        rejectReason_1 = _b.sent();\n                        this.failed(rejectReason_1, ti);\n                        return [3 /*break*/, 7];\n                    case 7:\n                        this.isTransitioning = false;\n                        this.nextTrns();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.prepareTI = function (ti) {\n        var viewsLength = this.views.length;\n        ti.opts = ti.opts || {};\n        if (ti.opts.delegate === undefined) {\n            ti.opts.delegate = this.delegate;\n        }\n        if (ti.removeView !== undefined) {\n            assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n            assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n            var index = this.views.indexOf(ti.removeView);\n            if (index < 0) {\n                throw new Error('removeView was not found');\n            }\n            ti.removeStart += index;\n        }\n        if (ti.removeStart !== undefined) {\n            if (ti.removeStart < 0) {\n                ti.removeStart = viewsLength - 1;\n            }\n            if (ti.removeCount < 0) {\n                ti.removeCount = viewsLength - ti.removeStart;\n            }\n            ti.leavingRequiresTransition =\n                ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n        }\n        if (ti.insertViews) {\n            // allow -1 to be passed in to auto push it on the end\n            // and clean up the index if it's larger then the size of the stack\n            if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n                ti.insertStart = viewsLength;\n            }\n            ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n        }\n        var insertViews = ti.insertViews;\n        if (!insertViews) {\n            return;\n        }\n        assert(insertViews.length > 0, 'length can not be zero');\n        var viewControllers = convertToViews(insertViews);\n        if (viewControllers.length === 0) {\n            throw new Error('invalid views to insert');\n        }\n        // Check all the inserted view are correct\n        for (var _i = 0, viewControllers_1 = viewControllers; _i < viewControllers_1.length; _i++) {\n            var view = viewControllers_1[_i];\n            view.delegate = ti.opts.delegate;\n            var nav = view.nav;\n            if (nav && nav !== this) {\n                throw new Error('inserted view was already inserted');\n            }\n            if (view.state === VIEW_STATE_DESTROYED) {\n                throw new Error('inserted view was already destroyed');\n            }\n        }\n        ti.insertViews = viewControllers;\n    };\n    class_1.prototype.getEnteringView = function (ti, leavingView) {\n        var insertViews = ti.insertViews;\n        if (insertViews !== undefined) {\n            // grab the very last view of the views to be inserted\n            // and initialize it as the new entering view\n            return insertViews[insertViews.length - 1];\n        }\n        var removeStart = ti.removeStart;\n        if (removeStart !== undefined) {\n            var views = this.views;\n            var removeEnd = removeStart + ti.removeCount;\n            for (var i = views.length - 1; i >= 0; i--) {\n                var view = views[i];\n                if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n                    return view;\n                }\n            }\n        }\n        return undefined;\n    };\n    class_1.prototype.postViewInit = function (enteringView, leavingView, ti) {\n        assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n        assert(ti.resolve, 'resolve must be valid');\n        assert(ti.reject, 'reject must be valid');\n        var opts = ti.opts;\n        var insertViews = ti.insertViews;\n        var removeStart = ti.removeStart;\n        var removeCount = ti.removeCount;\n        var destroyQueue;\n        // there are views to remove\n        if (removeStart !== undefined && removeCount !== undefined) {\n            assert(removeStart >= 0, 'removeStart can not be negative');\n            assert(removeCount >= 0, 'removeCount can not be negative');\n            destroyQueue = [];\n            for (var i = 0; i < removeCount; i++) {\n                var view = this.views[i + removeStart];\n                if (view && view !== enteringView && view !== leavingView) {\n                    destroyQueue.push(view);\n                }\n            }\n            // default the direction to \"back\"\n            opts.direction = opts.direction || 'back';\n        }\n        var finalBalance = this.views.length +\n            (insertViews !== undefined ? insertViews.length : 0) -\n            (removeCount !== undefined ? removeCount : 0);\n        assert(finalBalance >= 0, 'final balance can not be negative');\n        if (finalBalance === 0) {\n            console.warn(\"You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.\", this, this.el);\n            throw new Error('navigation stack needs at least one root page');\n        }\n        // At this point the transition can not be rejected, any throw should be an error\n        // there are views to insert\n        if (insertViews) {\n            // add the views to the\n            var insertIndex = ti.insertStart;\n            for (var _i = 0, insertViews_1 = insertViews; _i < insertViews_1.length; _i++) {\n                var view = insertViews_1[_i];\n                this.insertViewAt(view, insertIndex);\n                insertIndex++;\n            }\n            if (ti.enteringRequiresTransition) {\n                // default to forward if not already set\n                opts.direction = opts.direction || 'forward';\n            }\n        }\n        // if the views to be removed are in the beginning or middle\n        // and there is not a view that needs to visually transition out\n        // then just destroy them and don't transition anything\n        // batch all of lifecycles together\n        // let's make sure, callbacks are zoned\n        if (destroyQueue && destroyQueue.length > 0) {\n            for (var _a = 0, destroyQueue_1 = destroyQueue; _a < destroyQueue_1.length; _a++) {\n                var view = destroyQueue_1[_a];\n                lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n                lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n                lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            }\n            // once all lifecycle events has been delivered, we can safely detroy the views\n            for (var _b = 0, destroyQueue_2 = destroyQueue; _b < destroyQueue_2.length; _b++) {\n                var view = destroyQueue_2[_b];\n                this.destroyView(view);\n            }\n        }\n    };\n    class_1.prototype.transition = function (enteringView, leavingView, ti) {\n        return __awaiter(this, void 0, void 0, function () {\n            var opts, progressCallback, mode, enteringEl, leavingEl, animationOpts, hasCompleted;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        opts = ti.opts;\n                        progressCallback = opts.progressAnimation\n                            ? function (ani) { return _this.sbAni = ani; }\n                            : undefined;\n                        mode = getIonMode(this);\n                        enteringEl = enteringView.element;\n                        leavingEl = leavingView && leavingView.element;\n                        animationOpts = Object.assign({ mode: mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, animationBuilder: this.animation || opts.animationBuilder || config.get('navAnimation'), progressCallback: progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl: enteringEl,\n                            leavingEl: leavingEl }, opts);\n                        return [4 /*yield*/, transition(animationOpts)];\n                    case 1:\n                        hasCompleted = (_a.sent()).hasCompleted;\n                        return [2 /*return*/, this.transitionFinish(hasCompleted, enteringView, leavingView, opts)];\n                }\n            });\n        });\n    };\n    class_1.prototype.transitionFinish = function (hasCompleted, enteringView, leavingView, opts) {\n        var cleanupView = hasCompleted ? enteringView : leavingView;\n        if (cleanupView) {\n            this.cleanup(cleanupView);\n        }\n        return {\n            hasCompleted: hasCompleted,\n            requiresTransition: true,\n            enteringView: enteringView,\n            leavingView: leavingView,\n            direction: opts.direction\n        };\n    };\n    class_1.prototype.insertViewAt = function (view, index) {\n        var views = this.views;\n        var existingIndex = views.indexOf(view);\n        if (existingIndex > -1) {\n            // this view is already in the stack!!\n            // move it to its new location\n            assert(view.nav === this, 'view is not part of the nav');\n            views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n        }\n        else {\n            assert(!view.nav, 'nav is used');\n            // this is a new view to add to the stack\n            // create the new entering view\n            view.nav = this;\n            // insert the entering view into the correct index in the stack\n            views.splice(index, 0, view);\n        }\n    };\n    class_1.prototype.removeView = function (view) {\n        assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n        var views = this.views;\n        var index = views.indexOf(view);\n        assert(index > -1, 'view must be part of the stack');\n        if (index >= 0) {\n            views.splice(index, 1);\n        }\n    };\n    class_1.prototype.destroyView = function (view) {\n        view._destroy();\n        this.removeView(view);\n    };\n    /**\n     * DOM WRITE\n     */\n    class_1.prototype.cleanup = function (activeView) {\n        // ok, cleanup time!! Destroy all of the views that are\n        // INACTIVE and come after the active view\n        // only do this if the views exist, though\n        if (this.destroyed) {\n            return;\n        }\n        var views = this.views;\n        var activeViewIndex = views.indexOf(activeView);\n        for (var i = views.length - 1; i >= 0; i--) {\n            var view = views[i];\n            /**\n             * When inserting multiple views via insertPages\n             * the last page will be transitioned to, but the\n             * others will not be. As a result, a DOM element\n             * will only be created for the last page inserted.\n             * As a result, it is possible to have views in the\n             * stack that do not have `view.element` yet.\n             */\n            var element = view.element;\n            if (element) {\n                if (i > activeViewIndex) {\n                    // this view comes after the active view\n                    // let's unload it\n                    lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n                    this.destroyView(view);\n                }\n                else if (i < activeViewIndex) {\n                    // this view comes before the active view\n                    // and it is not a portal then ensure it is hidden\n                    setPageHidden(element, true);\n                }\n            }\n        }\n    };\n    class_1.prototype.canStart = function () {\n        return (!!this.swipeGesture &&\n            !this.isTransitioning &&\n            this.transInstr.length === 0 &&\n            this.animationEnabled &&\n            this.canGoBackSync());\n    };\n    class_1.prototype.onStart = function () {\n        this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: {\n                direction: 'back',\n                progressAnimation: true\n            }\n        }, undefined);\n    };\n    class_1.prototype.onMove = function (stepValue) {\n        if (this.sbAni) {\n            this.sbAni.progressStep(stepValue);\n        }\n    };\n    class_1.prototype.onEnd = function (shouldComplete, stepValue, dur) {\n        var _this = this;\n        if (this.sbAni) {\n            this.animationEnabled = false;\n            this.sbAni.onFinish(function () {\n                _this.animationEnabled = true;\n            }, { oneTimeCallback: true });\n            // Account for rounding errors in JS\n            var newStepValue = (shouldComplete) ? -0.001 : 0.001;\n            /**\n             * Animation will be reversed here, so need to\n             * reverse the easing curve as well\n             *\n             * Additionally, we need to account for the time relative\n             * to the new easing curve, as `stepValue` is going to be given\n             * in terms of a linear curve.\n             */\n            if (!shouldComplete) {\n                this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n                newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n            }\n            else {\n                newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n            }\n            this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n        }\n    };\n    class_1.prototype.render = function () {\n        return (h(\"slot\", null));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"swipeGesture\": [\"swipeGestureChanged\"],\n                \"root\": [\"rootChanged\"]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return class_1;\n}());\nNav.style = navCss;\nvar navLink = function (el, routerDirection, component, componentProps, routerAnimation) {\n    var nav = el.closest('ion-nav');\n    if (nav) {\n        if (routerDirection === 'forward') {\n            if (component !== undefined) {\n                return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n            }\n        }\n        else if (routerDirection === 'root') {\n            if (component !== undefined) {\n                return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n            }\n        }\n        else if (routerDirection === 'back') {\n            return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n        }\n    }\n    return Promise.resolve(false);\n};\nvar NavLink = /** @class */ (function () {\n    function NavLink(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /**\n         * The transition direction when navigating to another page.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = function () {\n            return navLink(_this.el, _this.routerDirection, _this.component, _this.componentProps, _this.routerAnimation);\n        };\n    }\n    NavLink.prototype.render = function () {\n        return (h(Host, { onClick: this.onClick }));\n    };\n    Object.defineProperty(NavLink.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: false,\n        configurable: true\n    });\n    return NavLink;\n}());\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"],"sourceRoot":""}